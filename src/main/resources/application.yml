spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            scope: profile, email
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope: name,email
            client-name: naver
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/linkmoa?autoReconnect=true&useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: root
    password: ${LOCAL_DB_PASSWORD}

  jwt:
    secret: ${JWT_SECRET}

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

logging:
  level:
    org:
    hibernate:
      SQL: DEBUG
    type:
      descriptor:
        sql:
          BasicBinder: TRACE

cloud:
  gcp:
    storage:
      bucket: knulinkmoa-bucket

springdoc:
  packages-to-scan: com.knu.linkmoa
  override-with-generic-response: true
  default-consumes-media-type: application/json;charset=UTF-8 # ?? ??? ??
  default-produces-media-type: application/json;charset=UTF-8 # ?? ??? ??
  swagger-ui:
    operations-sorter: method # operations ?? ??? HTTP Method ?
    tags-sorter: alpha # tag ?? ??? ??? ?